# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [perso, master]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [perso]
  schedule:
    - cron: "44 5 * * 1"

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["cpp"]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
      - name: install clang-12-dev
        run: |
          sudo apt -y update
          sudo apt -y upgrade
          sudo apt -y purge llvm-12-dev clang-12
          sudo apt -y -f install --allow-downgrades libclang-12-dev=1:12.0.0-3ubuntu1~20.04.3 libclang1-12=1:12.0.0-3ubuntu1~20.04.3 libclang-common-12-dev=1:12.0.0-3ubuntu1~20.04.3 libllvm12=1:12.0.0-3ubuntu1~20.04.3 clang-12=1:12.0.0-3ubuntu1~20.04.3 llvm-12-dev=1:12.0.0-3ubuntu1~20.04.3 libclang-cpp12=1:12.0.0-3ubuntu1~20.04.3 llvm-12-linker-tools=1:12.0.0-3ubuntu1~20.04.3 libomp-12-dev llvm-12=1:12.0.0-3ubuntu1~20.04.3 llvm-12-tools=1:12.0.0-3ubuntu1~20.04.3 llvm-12-runtime=1:12.0.0-3ubuntu1~20.04.3
      - name: update-alternative list all
        run: |
          update-alternatives --get-selections
          update-alternatives --list c++
          update-alternatives --list cc
          update-alternatives --list clang
          update-alternatives --list clang++
      - name: configure clang and llvm
        run: |
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 99
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang 99
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 99
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-12 99
          sudo update-alternatives --set c++ /usr/bin/clang++
          sudo update-alternatives --set cc /usr/bin/clang
          sudo update-alternatives --set clang /usr/bin/clang-12
          sudo update-alternatives --set clang++ /usr/bin/clang++-12
      - name: clang version
        run: |
          clang++ --version
          clang-12 --version
      - name: clang 12 tree
        run: |
          tree /usr/lib/llvm-12
      - name: ls /usr/lib
        run: |
          ls /usr/lib
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      # - name: Autobuild
      #   uses: github/codeql-action/autobuild@v1

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö https://git.io/JvXDl

      # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=clang++-12 -DClang_DIR:PATH=/usr/lib/cmake/clang-12 -DLLVM_DIR:PATH=/usr/lib/llvm-12/cmake -DCLANG_LINK_CLANG_DYLIB=on -DUSE_SYSTEM_RAPIDJSON=off || echo "error"
      - name: CMakeCache.txt
        run: |
          cd build
          cat CMakeCache.txt
      - name: build
        run: |
          cd build
          cmake --build . -j

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
